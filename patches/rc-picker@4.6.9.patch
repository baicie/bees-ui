diff --git a/es/PickerInput/Popup/Footer.d.ts b/es/PickerInput/Popup/Footer.d.ts
index d17a328584e76a8fc147ae1b2650664f1e354fb9..1408b960a9d5bdf128afda3c80bdbfa64fb7d577 100644
--- a/es/PickerInput/Popup/Footer.d.ts
+++ b/es/PickerInput/Popup/Footer.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { GenerateConfig } from '../../generate';
 import type { DisabledDate, InternalMode, PanelMode, SharedPickerProps } from '../../interface';
 import type { PopupShowTimeConfig } from '.';
diff --git a/es/PickerInput/Popup/Footer.js b/es/PickerInput/Popup/Footer.js
index cdd238ab0c27e356973ddf7f504ef39bfd9d335e..6530296e73afcc6fb3f5a3e02649d6af74f5a84d 100644
--- a/es/PickerInput/Popup/Footer.js
+++ b/es/PickerInput/Popup/Footer.js
@@ -1,6 +1,6 @@
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import classNames from 'classnames';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import useTimeInfo from "../../hooks/useTimeInfo";
 import PickerContext from "../context";
 export default function Footer(props) {
diff --git a/es/PickerInput/Popup/PopupPanel.d.ts b/es/PickerInput/Popup/PopupPanel.d.ts
index 09c9dd4fe0ca5746d19d013af75aeeda1da20b64..8a3eb830720d61bfcc41358d759983b6fbd0e0e8 100644
--- a/es/PickerInput/Popup/PopupPanel.d.ts
+++ b/es/PickerInput/Popup/PopupPanel.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { type PickerPanelProps } from '../../PickerPanel';
 import { type FooterProps } from './Footer';
 export type MustProp<DateType extends object> = Required<Pick<PickerPanelProps<DateType>, 'mode' | 'onPanelChange'>>;
diff --git a/es/PickerInput/Popup/PopupPanel.js b/es/PickerInput/Popup/PopupPanel.js
index 256543c5b549bcebb90a0c429aa9d771cee7b5d1..a5e997752b0e6e62700dc67d9e3c81db0e1c141d 100644
--- a/es/PickerInput/Popup/PopupPanel.js
+++ b/es/PickerInput/Popup/PopupPanel.js
@@ -1,6 +1,6 @@
 import _extends from "@babel/runtime/helpers/esm/extends";
 import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import PickerPanel from "../../PickerPanel";
 import { PickerHackContext } from "../../PickerPanel/context";
 import PickerContext from "../context";
diff --git a/es/PickerInput/Popup/PresetPanel.d.ts b/es/PickerInput/Popup/PresetPanel.d.ts
index cf7b027eb7cadcf81ac2782ad70fe7f51d9098ff..ff4d7b50187c2d1ff3430ff2f993d1cce1d00329 100644
--- a/es/PickerInput/Popup/PresetPanel.d.ts
+++ b/es/PickerInput/Popup/PresetPanel.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { ValueDate } from '../../interface';
 export interface PresetPanelProps<ValueType = any> {
     prefixCls: string;
diff --git a/es/PickerInput/Popup/PresetPanel.js b/es/PickerInput/Popup/PresetPanel.js
index 2dd3c88eede564863c0c85a61e63eb10f0d8cf5b..bb72a731acd1f73715780d95f5442cf516a1e7ae 100644
--- a/es/PickerInput/Popup/PresetPanel.js
+++ b/es/PickerInput/Popup/PresetPanel.js
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 function executeValue(value) {
   return typeof value === 'function' ? value() : value;
 }
diff --git a/es/PickerInput/Popup/index.d.ts b/es/PickerInput/Popup/index.d.ts
index e6c9a00294be56deeb99ee5a392b4a97f42d0f3e..317a406b614bfe388a73f3240e3cbc149c2c572a 100644
--- a/es/PickerInput/Popup/index.d.ts
+++ b/es/PickerInput/Popup/index.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { RangeTimeProps, SharedPickerProps, SharedTimeProps, ValueDate } from '../../interface';
 import { type FooterProps } from './Footer';
 import { type PopupPanelProps } from './PopupPanel';
diff --git a/es/PickerInput/Popup/index.js b/es/PickerInput/Popup/index.js
index ffb290501033e73e8a4c28690a47ce909cf88eb0..65056b3b808fc9151388bb03c8dc00957be1e876 100644
--- a/es/PickerInput/Popup/index.js
+++ b/es/PickerInput/Popup/index.js
@@ -3,7 +3,7 @@ import _extends from "@babel/runtime/helpers/esm/extends";
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import classNames from 'classnames';
 import ResizeObserver from 'rc-resize-observer';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { toArray } from "../../utils/miscUtil";
 import { getRealPlacement, getoffsetUnit } from "../../utils/uiUtil";
 import PickerContext from "../context";
diff --git a/es/PickerInput/RangePicker.d.ts b/es/PickerInput/RangePicker.d.ts
index b959328893ace44787c0f2683f65a2cb495b4f58..53c96b5795f7e3c31e7ae5f02fbb99eaf4349da2 100644
--- a/es/PickerInput/RangePicker.d.ts
+++ b/es/PickerInput/RangePicker.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { BaseInfo, PanelMode, RangePickerRef, RangeTimeProps, SharedPickerProps, ValueDate } from '../interface';
 import { type SelectorIdType } from './Selector/RangeSelector';
 export type RangeValueType<DateType> = [
diff --git a/es/PickerInput/RangePicker.js b/es/PickerInput/RangePicker.js
index d0f7329ad51f8ecc540382078249bded7865f9bd..3da735d10fae13c03e5f9c02b867d856660f0dca 100644
--- a/es/PickerInput/RangePicker.js
+++ b/es/PickerInput/RangePicker.js
@@ -7,7 +7,7 @@ import useLayoutEffect from "rc-util/es/hooks/useLayoutEffect";
 import omit from "rc-util/es/omit";
 import pickAttrs from "rc-util/es/pickAttrs";
 import warning from "rc-util/es/warning";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import PickerTrigger from "../PickerTrigger";
 import { pickTriggerProps } from "../PickerTrigger/util";
 import { fillIndex, getFromDate, toArray } from "../utils/miscUtil";
diff --git a/es/PickerInput/Selector/Icon.d.ts b/es/PickerInput/Selector/Icon.d.ts
index ab89b8e48eff442a84287cbcdf5a7cebc6e882c9..922a78402a62c5917d9cfa92d30d9f42cf2a8cb8 100644
--- a/es/PickerInput/Selector/Icon.d.ts
+++ b/es/PickerInput/Selector/Icon.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 export interface IconProps extends React.HtmlHTMLAttributes<HTMLElement> {
     icon?: React.ReactNode;
     type: 'suffix' | 'clear';
diff --git a/es/PickerInput/Selector/Icon.js b/es/PickerInput/Selector/Icon.js
index 6bc4458bd25e6adba785cdd163bc813ad02ca289..5a8d430517a9e5ce9744350e14bb756a4175d18b 100644
--- a/es/PickerInput/Selector/Icon.js
+++ b/es/PickerInput/Selector/Icon.js
@@ -2,7 +2,7 @@ import _extends from "@babel/runtime/helpers/esm/extends";
 import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
 var _excluded = ["icon", "type"],
   _excluded2 = ["onClear"];
-import * as React from 'react';
+import * as React from 'preact/compat';
 import PickerContext from "../context";
 export default function Icon(props) {
   var icon = props.icon,
diff --git a/es/PickerInput/Selector/Input.d.ts b/es/PickerInput/Selector/Input.d.ts
index fb59bd62600fb372d0bf1820abdc938dbcbfc90e..ac2d27cab21e59ae6cd8e7c8ec26a84780e5e2c4 100644
--- a/es/PickerInput/Selector/Input.d.ts
+++ b/es/PickerInput/Selector/Input.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { PickerRef } from '../../interface';
 export interface InputRef extends PickerRef {
     inputElement: HTMLInputElement;
diff --git a/es/PickerInput/Selector/Input.js b/es/PickerInput/Selector/Input.js
index eb72ea79fc8a7c56ce7d69a8c4dc04ea3a4554a0..15708c095aba4184bda686532419b50f17515940 100644
--- a/es/PickerInput/Selector/Input.js
+++ b/es/PickerInput/Selector/Input.js
@@ -7,7 +7,7 @@ import classNames from 'classnames';
 import { useEvent } from 'rc-util';
 import useLayoutEffect from "rc-util/es/hooks/useLayoutEffect";
 import raf from "rc-util/es/raf";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { leftPad } from "../../utils/miscUtil";
 import PickerContext from "../context";
 import useLockEffect from "../hooks/useLockEffect";
diff --git a/es/PickerInput/Selector/RangeSelector.d.ts b/es/PickerInput/Selector/RangeSelector.d.ts
index 61541202e5970d6adedc12a12fc84c25b5f14b68..ee8f39b1be1f7c2cabffe8c5ad32b18931355fc0 100644
--- a/es/PickerInput/Selector/RangeSelector.d.ts
+++ b/es/PickerInput/Selector/RangeSelector.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { RangePickerRef, SelectorProps } from '../../interface';
 export type SelectorIdType = string | {
     start?: string;
diff --git a/es/PickerInput/Selector/RangeSelector.js b/es/PickerInput/Selector/RangeSelector.js
index 991fae74f9d64c305f7b98949f5b441213541417..2499e23f3244345bc07f45a5deb8c55a4b97659c 100644
--- a/es/PickerInput/Selector/RangeSelector.js
+++ b/es/PickerInput/Selector/RangeSelector.js
@@ -9,7 +9,7 @@ var _excluded = ["id", "clearIcon", "suffixIcon", "separator", "activeIndex", "a
 import classNames from 'classnames';
 import ResizeObserver from 'rc-resize-observer';
 import { useEvent } from 'rc-util';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import PickerContext from "../context";
 import useInputProps from "./hooks/useInputProps";
 import useRootProps from "./hooks/useRootProps";
diff --git a/es/PickerInput/Selector/SingleSelector/MultipleDates.d.ts b/es/PickerInput/Selector/SingleSelector/MultipleDates.d.ts
index 7ce602d2ecae71864e9b93955c6be2787c0db103..86c6dd827f020af5a4fa8af0c7e9e570c3678f21 100644
--- a/es/PickerInput/Selector/SingleSelector/MultipleDates.d.ts
+++ b/es/PickerInput/Selector/SingleSelector/MultipleDates.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { PickerProps } from '../../SinglePicker';
 export interface MultipleDatesProps<DateType extends object = any> extends Pick<PickerProps, 'maxTagCount'> {
     prefixCls: string;
diff --git a/es/PickerInput/Selector/SingleSelector/MultipleDates.js b/es/PickerInput/Selector/SingleSelector/MultipleDates.js
index 45755fff457000c6bf73269532ac89d911fd7504..f016ac5ead0444d5c1341e4fb1c3694bad7613f4 100644
--- a/es/PickerInput/Selector/SingleSelector/MultipleDates.js
+++ b/es/PickerInput/Selector/SingleSelector/MultipleDates.js
@@ -1,6 +1,6 @@
 import classNames from 'classnames';
 import Overflow from 'rc-overflow';
-import * as React from 'react';
+import * as React from 'preact/compat';
 export default function MultipleDates(props) {
   var prefixCls = props.prefixCls,
     value = props.value,
diff --git a/es/PickerInput/Selector/SingleSelector/index.d.ts b/es/PickerInput/Selector/SingleSelector/index.d.ts
index 16324e89cb1e8b7f84ddf8a3f85350a37d288aae..37ce0c59d1e96bf75b8ca6e733d907a49f29d1be 100644
--- a/es/PickerInput/Selector/SingleSelector/index.d.ts
+++ b/es/PickerInput/Selector/SingleSelector/index.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { InternalMode, PickerRef, SelectorProps } from '../../../interface';
 import type { PickerProps } from '../../SinglePicker';
 export interface SingleSelectorProps<DateType extends object = any> extends SelectorProps<DateType>, Pick<PickerProps, 'multiple' | 'maxTagCount'> {
diff --git a/es/PickerInput/Selector/SingleSelector/index.js b/es/PickerInput/Selector/SingleSelector/index.js
index 0d5f0a6162e29b21b19bb3b0d8e97fe577628121..c45145fbe6401b58e706ecec54c8288c50b8684c 100644
--- a/es/PickerInput/Selector/SingleSelector/index.js
+++ b/es/PickerInput/Selector/SingleSelector/index.js
@@ -5,7 +5,7 @@ import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
 var _excluded = ["id", "open", "clearIcon", "suffixIcon", "activeHelp", "allHelp", "focused", "onFocus", "onBlur", "onKeyDown", "locale", "generateConfig", "placeholder", "className", "style", "onClick", "onClear", "internalPicker", "value", "onChange", "onSubmit", "onInputChange", "multiple", "maxTagCount", "format", "maskFormat", "preserveInvalidOnBlur", "onInvalid", "disabled", "invalid", "inputReadOnly", "direction", "onOpenChange", "onMouseDown", "required", "aria-required", "autoFocus", "removeIcon"];
 import classNames from 'classnames';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { isSame } from "../../../utils/dateUtil";
 import PickerContext from "../../context";
 import useInputProps from "../hooks/useInputProps";
diff --git a/es/PickerInput/Selector/hooks/useClearIcon.d.ts b/es/PickerInput/Selector/hooks/useClearIcon.d.ts
index 72dcc58c9caaca7e13259f910e6a3ec15bd0a8c7..bf37fa71de222fed52dfaf3628a924ca8f9cb0b8 100644
--- a/es/PickerInput/Selector/hooks/useClearIcon.d.ts
+++ b/es/PickerInput/Selector/hooks/useClearIcon.d.ts
@@ -1,5 +1,5 @@
-import type { ReactNode } from 'react';
-import * as React from 'react';
+import type { ReactNode } from 'preact/compat';
+import * as React from 'preact/compat';
 /**
  * Used for `useFilledProps` since it already in the React.useMemo
  */
diff --git a/es/PickerInput/Selector/hooks/useClearIcon.js b/es/PickerInput/Selector/hooks/useClearIcon.js
index 47caffd677739cae87d4219d5454d49b0267fa0a..9305595746d9b89094e16404af1c7e21136ef125 100644
--- a/es/PickerInput/Selector/hooks/useClearIcon.js
+++ b/es/PickerInput/Selector/hooks/useClearIcon.js
@@ -1,6 +1,6 @@
 import _typeof from "@babel/runtime/helpers/esm/typeof";
 import warning from "rc-util/es/warning";
-import * as React from 'react';
+import * as React from 'preact/compat';
 
 /**
  * Used for `useFilledProps` since it already in the React.useMemo
diff --git a/es/PickerInput/Selector/hooks/useInputProps.js b/es/PickerInput/Selector/hooks/useInputProps.js
index 5c340d91205cd13a6934cf6a30fd5a691dde5077..89a77f86976dc574f0dacb26f9ce83753e4e0a4f 100644
--- a/es/PickerInput/Selector/hooks/useInputProps.js
+++ b/es/PickerInput/Selector/hooks/useInputProps.js
@@ -1,7 +1,7 @@
 import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
 import { warning } from 'rc-util';
 import pickAttrs from "rc-util/es/pickAttrs";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { formatValue } from "../../../utils/dateUtil";
 export default function useInputProps(props, /** Used for SinglePicker */
 postProps) {
diff --git a/es/PickerInput/Selector/hooks/useRootProps.d.ts b/es/PickerInput/Selector/hooks/useRootProps.d.ts
index 23f258bd84b8bf452915e938b88b49680a5fe948..663cc789f26cb2b08d5d0ec8fd50bfb0e906ef54 100644
--- a/es/PickerInput/Selector/hooks/useRootProps.d.ts
+++ b/es/PickerInput/Selector/hooks/useRootProps.d.ts
@@ -1,2 +1,2 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 export default function useRootProps(props: React.HTMLAttributes<any>): React.HTMLAttributes<any>;
diff --git a/es/PickerInput/Selector/hooks/useRootProps.js b/es/PickerInput/Selector/hooks/useRootProps.js
index 14c6a00e427066dfa5e96c0f3f5cb25b99053a43..696a84b5c063aab1709eaf29cbfd01cb6fb22680 100644
--- a/es/PickerInput/Selector/hooks/useRootProps.js
+++ b/es/PickerInput/Selector/hooks/useRootProps.js
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { pickProps } from "../../../utils/miscUtil";
 var propNames = ['onMouseEnter', 'onMouseLeave'];
 export default function useRootProps(props) {
diff --git a/es/PickerInput/SinglePicker.d.ts b/es/PickerInput/SinglePicker.d.ts
index 012a62af9835cbe08dab1e7df181c5cbe3935467..2b9d1102133c4f51664a69d15f58b09de8e6e3f0 100644
--- a/es/PickerInput/SinglePicker.d.ts
+++ b/es/PickerInput/SinglePicker.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { BaseInfo, PanelMode, PickerRef, SharedPickerProps, SharedTimeProps, ValueDate } from '../interface';
 export interface BasePickerProps<DateType extends object = any> extends SharedPickerProps<DateType> {
     id?: string;
diff --git a/es/PickerInput/SinglePicker.js b/es/PickerInput/SinglePicker.js
index d02f6c526a7ec799aab3b922d3fd300c59cc26d4..a4d371c9c93b4aa0a027ccb3f12ea5268d44a037 100644
--- a/es/PickerInput/SinglePicker.js
+++ b/es/PickerInput/SinglePicker.js
@@ -6,7 +6,7 @@ import { useEvent, useMergedState } from 'rc-util';
 import useLayoutEffect from "rc-util/es/hooks/useLayoutEffect";
 import omit from "rc-util/es/omit";
 import pickAttrs from "rc-util/es/pickAttrs";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import useToggleDates from "../hooks/useToggleDates";
 import PickerTrigger from "../PickerTrigger";
 import { pickTriggerProps } from "../PickerTrigger/util";
diff --git a/es/PickerInput/context.d.ts b/es/PickerInput/context.d.ts
index 8de34f7178633c5a7586192b57170ac8aa0f77e2..68a499aa8a87aa03c3b5c32ba3105d0f9c606101 100644
--- a/es/PickerInput/context.d.ts
+++ b/es/PickerInput/context.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { GenerateConfig } from '../generate';
 import type { Components, Locale } from '../interface';
 export interface PickerContextProps<DateType = any> {
diff --git a/es/PickerInput/context.js b/es/PickerInput/context.js
index c433c6a729db88b9c29fb250c4b882c0edddbae5..54e54495dd98cc8c77f6e7bef22b184c46616ccd 100644
--- a/es/PickerInput/context.js
+++ b/es/PickerInput/context.js
@@ -1,3 +1,3 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 var PickerContext = /*#__PURE__*/React.createContext(null);
 export default PickerContext;
\ No newline at end of file
diff --git a/es/PickerInput/hooks/useCellRender.js b/es/PickerInput/hooks/useCellRender.js
index 67a93179db87f4d74b62776f3de19dd4b657c4c5..ea5977fee858b0eb014a5bc6db0499a4277f7f59 100644
--- a/es/PickerInput/hooks/useCellRender.js
+++ b/es/PickerInput/hooks/useCellRender.js
@@ -1,6 +1,6 @@
 import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
 import { warning } from 'rc-util';
-import * as React from 'react';
+import * as React from 'preact/compat';
 export default function useCellRender(cellRender, dateRender, monthCellRender, range) {
   // ========================= Warn =========================
   if (process.env.NODE_ENV !== 'production') {
diff --git a/es/PickerInput/hooks/useDelayState.js b/es/PickerInput/hooks/useDelayState.js
index 4d89a3f4fb4116f1b983881e8b32943d75016186..495c8e153b6e7d8ee07fad636d4906b538d317e2 100644
--- a/es/PickerInput/hooks/useDelayState.js
+++ b/es/PickerInput/hooks/useDelayState.js
@@ -1,7 +1,7 @@
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import { useEvent, useMergedState } from 'rc-util';
 import raf from "rc-util/es/raf";
-import React from 'react';
+import React from 'preact/compat';
 
 /**
  * Will be `true` immediately for next effect.
diff --git a/es/PickerInput/hooks/useFieldFormat.js b/es/PickerInput/hooks/useFieldFormat.js
index dcf14d49099a3caaaea2ab10aa500c5ee26f44d6..021df1f657930501f9ba339aba6a2913cf43f679 100644
--- a/es/PickerInput/hooks/useFieldFormat.js
+++ b/es/PickerInput/hooks/useFieldFormat.js
@@ -1,5 +1,5 @@
 import _typeof from "@babel/runtime/helpers/esm/typeof";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { getRowFormat, toArray } from "../../utils/miscUtil";
 export function useFieldFormat(picker, locale, format) {
   return React.useMemo(function () {
diff --git a/es/PickerInput/hooks/useFieldsInvalidate.js b/es/PickerInput/hooks/useFieldsInvalidate.js
index 01fff990610e6879206ea9312194cba9524179a3..02797b44c63d31c54a96df0b7761783177137b0b 100644
--- a/es/PickerInput/hooks/useFieldsInvalidate.js
+++ b/es/PickerInput/hooks/useFieldsInvalidate.js
@@ -1,6 +1,6 @@
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import { fillIndex } from "../../utils/miscUtil";
-import * as React from 'react';
+import * as React from 'preact/compat';
 /**
  * Used to control each fields invalidate status
  */
diff --git a/es/PickerInput/hooks/useFilledProps.js b/es/PickerInput/hooks/useFilledProps.js
index 4772494ad14b75486dc4c3896a8ed31fadd0f617..814214f2964bb710d8de12a532202171e2c742e9 100644
--- a/es/PickerInput/hooks/useFilledProps.js
+++ b/es/PickerInput/hooks/useFilledProps.js
@@ -1,7 +1,7 @@
 import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import { warning } from 'rc-util';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import useLocale from "../../hooks/useLocale";
 import { fillShowTimeConfig, getTimeProps } from "../../hooks/useTimeConfig";
 import { toArray } from "../../utils/miscUtil";
diff --git a/es/PickerInput/hooks/useLockEffect.js b/es/PickerInput/hooks/useLockEffect.js
index e42790879239b9ad4d85b58ea5e19230a98e1bb1..bd742710276bf6f3720b497e5afc440ab5479ede 100644
--- a/es/PickerInput/hooks/useLockEffect.js
+++ b/es/PickerInput/hooks/useLockEffect.js
@@ -1,6 +1,6 @@
 import { useLayoutUpdateEffect } from "rc-util/es/hooks/useLayoutEffect";
 import raf from "rc-util/es/raf";
-import * as React from 'react';
+import * as React from 'preact/compat';
 
 /**
  * Trigger `callback` immediately when `condition` is `true`.
diff --git a/es/PickerInput/hooks/usePickerRef.d.ts b/es/PickerInput/hooks/usePickerRef.d.ts
index a9db471c6ebcf4048737f2ef4ef76d2dc2f6007c..f2321640af3bc7e554e0c056a95fd017da736b7e 100644
--- a/es/PickerInput/hooks/usePickerRef.d.ts
+++ b/es/PickerInput/hooks/usePickerRef.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { PickerRef } from '../../interface';
 type PickerRefType<OptionType> = Omit<PickerRef, 'focus'> & {
     focus: (options?: OptionType) => void;
diff --git a/es/PickerInput/hooks/usePickerRef.js b/es/PickerInput/hooks/usePickerRef.js
index 30d026d7e1fc5f832df7ba9fe8d20e27c06527b4..0dc3b61ae4ec39f2f4dab2b96506f141236a30d9 100644
--- a/es/PickerInput/hooks/usePickerRef.js
+++ b/es/PickerInput/hooks/usePickerRef.js
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 export default function usePickerRef(ref) {
   var selectorRef = React.useRef();
   React.useImperativeHandle(ref, function () {
diff --git a/es/PickerInput/hooks/usePresets.js b/es/PickerInput/hooks/usePresets.js
index 9b5f527d295d349998a1ab2765dfea5329299d9d..aa45dee9894d810113a57c5f6e9a6276d6e9e8fe 100644
--- a/es/PickerInput/hooks/usePresets.js
+++ b/es/PickerInput/hooks/usePresets.js
@@ -1,5 +1,5 @@
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import warning from "rc-util/es/warning";
 export default function usePresets(presets, legacyRanges) {
   return React.useMemo(function () {
diff --git a/es/PickerInput/hooks/useRangeActive.js b/es/PickerInput/hooks/useRangeActive.js
index dcc6ed8a9267472429363aefaa0983d31fa1cd57..041b5f8e82f95d499ea89e40cdc45e2cf5603313 100644
--- a/es/PickerInput/hooks/useRangeActive.js
+++ b/es/PickerInput/hooks/useRangeActive.js
@@ -1,5 +1,5 @@
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import useLockEffect from "./useLockEffect";
 /**
  * When user first focus one input, any submit will trigger focus another one.
diff --git a/es/PickerInput/hooks/useRangePickerValue.js b/es/PickerInput/hooks/useRangePickerValue.js
index 8fd06dc6d901a8163edf3a3c253349e4b56565d7..8e2e59aa0caee3ce24f66841bf847d7298ecbcc1 100644
--- a/es/PickerInput/hooks/useRangePickerValue.js
+++ b/es/PickerInput/hooks/useRangePickerValue.js
@@ -1,7 +1,7 @@
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import { useMergedState } from 'rc-util';
 import useLayoutEffect from "rc-util/es/hooks/useLayoutEffect";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { fillTime, isSame } from "../../utils/dateUtil";
 export function offsetPanelDate(generateConfig, picker, date, offset) {
   switch (picker) {
diff --git a/es/PickerInput/hooks/useRangeValue.js b/es/PickerInput/hooks/useRangeValue.js
index 26a0ff43acc480db1df98e4422f49063b85b76cb..ff134780cac8774f5ff06f184835721ec08174eb 100644
--- a/es/PickerInput/hooks/useRangeValue.js
+++ b/es/PickerInput/hooks/useRangeValue.js
@@ -1,7 +1,7 @@
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
 import { useEvent, useMergedState } from 'rc-util';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import useSyncState from "../../hooks/useSyncState";
 import { formatValue, isSame, isSameTimestamp } from "../../utils/dateUtil";
 import { fillIndex } from "../../utils/miscUtil";
diff --git a/es/PickerPanel/DatePanel/index.d.ts b/es/PickerPanel/DatePanel/index.d.ts
index 2b0a3247d3a1a34240853db16007b49e7a430f06..1b2af5c2db529708a1ea4e4100712df85ea3e6d7 100644
--- a/es/PickerPanel/DatePanel/index.d.ts
+++ b/es/PickerPanel/DatePanel/index.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { PanelMode, SharedPanelProps } from '../../interface';
 export interface DatePanelProps<DateType extends object> extends SharedPanelProps<DateType> {
     panelName?: PanelMode;
diff --git a/es/PickerPanel/DatePanel/index.js b/es/PickerPanel/DatePanel/index.js
index ad13d15b7c55ec056ba187a325820d8e7522b39c..23fd9e11ddcf088c9a579d68e682ab074cd2c670 100644
--- a/es/PickerPanel/DatePanel/index.js
+++ b/es/PickerPanel/DatePanel/index.js
@@ -2,7 +2,7 @@ import _extends from "@babel/runtime/helpers/esm/extends";
 import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import classNames from 'classnames';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { formatValue, getWeekStartDate, isSameDate, isSameMonth, WEEK_DAY_COUNT } from "../../utils/dateUtil";
 import { PanelContext, useInfo } from "../context";
 import PanelBody from "../PanelBody";
diff --git a/es/PickerPanel/DateTimePanel/index.d.ts b/es/PickerPanel/DateTimePanel/index.d.ts
index 7bcf311116c404c2d3e776927a6e666bd0d7d656..00c31953d746a7a5e1944ccb2b9c8ab71771f37c 100644
--- a/es/PickerPanel/DateTimePanel/index.d.ts
+++ b/es/PickerPanel/DateTimePanel/index.d.ts
@@ -1,3 +1,3 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { SharedPanelProps } from '../../interface';
 export default function DateTimePanel<DateType extends object = any>(props: SharedPanelProps<DateType>): React.JSX.Element;
diff --git a/es/PickerPanel/DateTimePanel/index.js b/es/PickerPanel/DateTimePanel/index.js
index 4e6a2ddb0af3de2f6e8f4ad88997eca78845704e..5522e77dd6a4ea70b76f8abc34f6200af2d38baf 100644
--- a/es/PickerPanel/DateTimePanel/index.js
+++ b/es/PickerPanel/DateTimePanel/index.js
@@ -1,6 +1,6 @@
 import _extends from "@babel/runtime/helpers/esm/extends";
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import useTimeInfo from "../../hooks/useTimeInfo";
 import { fillTime } from "../../utils/dateUtil";
 import DatePanel from "../DatePanel";
diff --git a/es/PickerPanel/DecadePanel/index.d.ts b/es/PickerPanel/DecadePanel/index.d.ts
index 06516e90585cd905be2e9b702599deb378e01f59..934bedf37716b0576f01c389974bd00de81078e6 100644
--- a/es/PickerPanel/DecadePanel/index.d.ts
+++ b/es/PickerPanel/DecadePanel/index.d.ts
@@ -1,3 +1,3 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { SharedPanelProps } from '../../interface';
 export default function DecadePanel<DateType extends object = any>(props: SharedPanelProps<DateType>): React.JSX.Element;
diff --git a/es/PickerPanel/DecadePanel/index.js b/es/PickerPanel/DecadePanel/index.js
index fa9596410bc6963e380028bc88406e73098bbfd8..b2ae1bb96ce07539f3fc4a828d557430f04def6f 100644
--- a/es/PickerPanel/DecadePanel/index.js
+++ b/es/PickerPanel/DecadePanel/index.js
@@ -1,7 +1,7 @@
 import _extends from "@babel/runtime/helpers/esm/extends";
 import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { formatValue, isInRange, isSameDecade } from "../../utils/dateUtil";
 import { PanelContext, useInfo } from "../context";
 import PanelBody from "../PanelBody";
diff --git a/es/PickerPanel/MonthPanel/index.d.ts b/es/PickerPanel/MonthPanel/index.d.ts
index a6b03d9d6a19c7497def1598f022e7942f3b84f0..7ea98d4e0d0a6ff2d858a9034a00ed459a00b738 100644
--- a/es/PickerPanel/MonthPanel/index.d.ts
+++ b/es/PickerPanel/MonthPanel/index.d.ts
@@ -1,3 +1,3 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { SharedPanelProps } from '../../interface';
 export default function MonthPanel<DateType extends object = any>(props: SharedPanelProps<DateType>): React.JSX.Element;
diff --git a/es/PickerPanel/MonthPanel/index.js b/es/PickerPanel/MonthPanel/index.js
index 88d4ad211908baed08205067ddc9d2c40e68b957..f829795f2da2d313d8263745f66f9bf4a7ca3f5f 100644
--- a/es/PickerPanel/MonthPanel/index.js
+++ b/es/PickerPanel/MonthPanel/index.js
@@ -1,7 +1,7 @@
 import _extends from "@babel/runtime/helpers/esm/extends";
 import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { formatValue } from "../../utils/dateUtil";
 import { PanelContext, useInfo } from "../context";
 import PanelBody from "../PanelBody";
diff --git a/es/PickerPanel/PanelBody.d.ts b/es/PickerPanel/PanelBody.d.ts
index acef1980adcbf7fcc480993dd346cad90d66e1d5..76296276a825dcb2a2b2fd5490d45518a69bfe99 100644
--- a/es/PickerPanel/PanelBody.d.ts
+++ b/es/PickerPanel/PanelBody.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { DisabledDate } from '../interface';
 export interface PanelBodyProps<DateType = any> {
     rowNum: number;
diff --git a/es/PickerPanel/PanelBody.js b/es/PickerPanel/PanelBody.js
index f538667a8b9ef578a725a5bf1251761d06a1bf7a..887ec430f9efcd69240a2310946c845114f71ded 100644
--- a/es/PickerPanel/PanelBody.js
+++ b/es/PickerPanel/PanelBody.js
@@ -2,7 +2,7 @@ import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
 import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import classNames from 'classnames';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { formatValue, isInRange, isSame } from "../utils/dateUtil";
 import { PickerHackContext, usePanelContext } from "./context";
 export default function PanelBody(props) {
diff --git a/es/PickerPanel/PanelHeader.d.ts b/es/PickerPanel/PanelHeader.d.ts
index f83aaf68e84710fa8116ed6fc895bc127291f55c..c865f51e9124d346a3a2c517d275b05d95575dcc 100644
--- a/es/PickerPanel/PanelHeader.d.ts
+++ b/es/PickerPanel/PanelHeader.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 export interface HeaderProps<DateType extends object> {
     offset?: (distance: number, date: DateType) => DateType;
     superOffset?: (distance: number, date: DateType) => DateType;
diff --git a/es/PickerPanel/PanelHeader.js b/es/PickerPanel/PanelHeader.js
index c2607287212f7254a027ad2dbea55736f00ea22f..55b597bd7906c242979bd4aecddece042c74e274 100644
--- a/es/PickerPanel/PanelHeader.js
+++ b/es/PickerPanel/PanelHeader.js
@@ -1,5 +1,5 @@
 import classNames from 'classnames';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { isSameOrAfter } from "../utils/dateUtil";
 import { PickerHackContext, usePanelContext } from "./context";
 var HIDDEN_STYLE = {
diff --git a/es/PickerPanel/QuarterPanel/index.d.ts b/es/PickerPanel/QuarterPanel/index.d.ts
index 719d30d1ebd9b46d43b3332dbbccb5f37125eeef..7e2494754c21562d26b4b91d20d0ec56153acca6 100644
--- a/es/PickerPanel/QuarterPanel/index.d.ts
+++ b/es/PickerPanel/QuarterPanel/index.d.ts
@@ -1,3 +1,3 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { SharedPanelProps } from '../../interface';
 export default function QuarterPanel<DateType extends object = any>(props: SharedPanelProps<DateType>): React.JSX.Element;
diff --git a/es/PickerPanel/QuarterPanel/index.js b/es/PickerPanel/QuarterPanel/index.js
index 63428eb904211ea56e520c4ca8a830e8477a78b4..fce4ae2bd5a62ba98abd159cf32cf7304705dc5d 100644
--- a/es/PickerPanel/QuarterPanel/index.js
+++ b/es/PickerPanel/QuarterPanel/index.js
@@ -1,7 +1,7 @@
 import _extends from "@babel/runtime/helpers/esm/extends";
 import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { formatValue } from "../../utils/dateUtil";
 import { PanelContext, useInfo } from "../context";
 import PanelBody from "../PanelBody";
diff --git a/es/PickerPanel/TimePanel/TimePanelBody/TimeColumn.d.ts b/es/PickerPanel/TimePanel/TimePanelBody/TimeColumn.d.ts
index e2f6da65ba01261f47b78dd7a49bdc3e0278eb92..5896aa72ddea65de58032320446a5448bd36e45f 100644
--- a/es/PickerPanel/TimePanel/TimePanelBody/TimeColumn.d.ts
+++ b/es/PickerPanel/TimePanel/TimePanelBody/TimeColumn.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 export type Unit<ValueType = number | string> = {
     label: React.ReactText;
     value: ValueType;
diff --git a/es/PickerPanel/TimePanel/TimePanelBody/TimeColumn.js b/es/PickerPanel/TimePanel/TimePanelBody/TimeColumn.js
index c89e8de5e1f6539b782db23cd0f3e03fb4456316..0311ca5ea683e70214475636276cf5ef6585bbd9 100644
--- a/es/PickerPanel/TimePanel/TimePanelBody/TimeColumn.js
+++ b/es/PickerPanel/TimePanel/TimePanelBody/TimeColumn.js
@@ -3,7 +3,7 @@ import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import classNames from 'classnames';
 import useLayoutEffect from "rc-util/es/hooks/useLayoutEffect";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { usePanelContext } from "../../context";
 import useScrollTo from "./useScrollTo";
 var SCROLL_DELAY = 300;
diff --git a/es/PickerPanel/TimePanel/TimePanelBody/index.d.ts b/es/PickerPanel/TimePanel/TimePanelBody/index.d.ts
index 8258e410ff12d7daa7ffa8aec5527908ccadf1a3..233c70a8997ac13a6758a55fd2eb0713b40e68e8 100644
--- a/es/PickerPanel/TimePanel/TimePanelBody/index.d.ts
+++ b/es/PickerPanel/TimePanel/TimePanelBody/index.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { SharedPanelProps, SharedTimeProps } from '../../../interface';
 export type TimePanelBodyProps<DateType extends object = any> = SharedPanelProps<DateType>;
 export default function TimePanelBody<DateType extends object = any>(props: SharedTimeProps<DateType>): React.JSX.Element;
diff --git a/es/PickerPanel/TimePanel/TimePanelBody/index.js b/es/PickerPanel/TimePanel/TimePanelBody/index.js
index 03cc35fafa5153a1ca565c915e7977b1857a4b70..ae3a6952b3bde5ab7df1c323046cde12d26b67e3 100644
--- a/es/PickerPanel/TimePanel/TimePanelBody/index.js
+++ b/es/PickerPanel/TimePanel/TimePanelBody/index.js
@@ -1,6 +1,6 @@
 import _extends from "@babel/runtime/helpers/esm/extends";
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import useTimeInfo from "../../../hooks/useTimeInfo";
 import { formatValue } from "../../../utils/dateUtil";
 import { PickerHackContext, usePanelContext } from "../../context";
diff --git a/es/PickerPanel/TimePanel/TimePanelBody/useScrollTo.d.ts b/es/PickerPanel/TimePanel/TimePanelBody/useScrollTo.d.ts
index af05904b2395fc66c8c9f1f43a0e4b71a49ac1db..d33c529ef17b347d15d72fc07097a949d16f0614 100644
--- a/es/PickerPanel/TimePanel/TimePanelBody/useScrollTo.d.ts
+++ b/es/PickerPanel/TimePanel/TimePanelBody/useScrollTo.d.ts
@@ -1,2 +1,2 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 export default function useScrollTo(ulRef: React.RefObject<HTMLUListElement>, value: number | string): [syncScroll: VoidFunction, clearScroll: VoidFunction, isScrolling: () => boolean];
diff --git a/es/PickerPanel/TimePanel/TimePanelBody/useScrollTo.js b/es/PickerPanel/TimePanel/TimePanelBody/useScrollTo.js
index ea72e7560d977cc1730fa08679bdb735a5a8fd67..ec2e5ca09fd13026d4dd136d9c39b1b6bff2df51 100644
--- a/es/PickerPanel/TimePanel/TimePanelBody/useScrollTo.js
+++ b/es/PickerPanel/TimePanel/TimePanelBody/useScrollTo.js
@@ -1,7 +1,7 @@
 import { useEvent } from 'rc-util';
 import raf from "rc-util/es/raf";
 import isVisible from "rc-util/es/Dom/isVisible";
-import * as React from 'react';
+import * as React from 'preact/compat';
 var SPEED_PTG = 1 / 3;
 export default function useScrollTo(ulRef, value) {
   // ========================= Scroll =========================
diff --git a/es/PickerPanel/TimePanel/index.d.ts b/es/PickerPanel/TimePanel/index.d.ts
index 2dee14a9a385e2ed55fcb084f979593c89054cfe..4a1c8443b7d09e073333d74deeec52695d0a94e1 100644
--- a/es/PickerPanel/TimePanel/index.d.ts
+++ b/es/PickerPanel/TimePanel/index.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { SharedPanelProps } from '../../interface';
 export type TimePanelProps<DateType extends object> = SharedPanelProps<DateType>;
 export default function TimePanel<DateType extends object = any>(props: TimePanelProps<DateType>): React.JSX.Element;
diff --git a/es/PickerPanel/TimePanel/index.js b/es/PickerPanel/TimePanel/index.js
index 88ba835afe42ce31c103fe9054e3ccf134411333..29ee1e2693c95f5b4e69a8232dd2670205c0869e 100644
--- a/es/PickerPanel/TimePanel/index.js
+++ b/es/PickerPanel/TimePanel/index.js
@@ -1,6 +1,6 @@
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import classNames from 'classnames';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { formatValue } from "../../utils/dateUtil";
 import { PanelContext, useInfo } from "../context";
 import PanelHeader from "../PanelHeader";
diff --git a/es/PickerPanel/WeekPanel/index.d.ts b/es/PickerPanel/WeekPanel/index.d.ts
index 614d9f4892ab4703f15a9ff104d616d7e53072f9..fd770a2f7df2f7f138c11730cd02883b0089f3ae 100644
--- a/es/PickerPanel/WeekPanel/index.d.ts
+++ b/es/PickerPanel/WeekPanel/index.d.ts
@@ -1,3 +1,3 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { SharedPanelProps } from '../../interface';
 export default function WeekPanel<DateType extends object = any>(props: SharedPanelProps<DateType>): React.JSX.Element;
diff --git a/es/PickerPanel/WeekPanel/index.js b/es/PickerPanel/WeekPanel/index.js
index 0ac9a56f3c212e6d94f033b724f2981d23d22848..df3b061c6773869508319eab269dce3eeaeb3091 100644
--- a/es/PickerPanel/WeekPanel/index.js
+++ b/es/PickerPanel/WeekPanel/index.js
@@ -2,7 +2,7 @@ import _extends from "@babel/runtime/helpers/esm/extends";
 import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import classNames from 'classnames';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { isInRange, isSameWeek } from "../../utils/dateUtil";
 import DatePanel from "../DatePanel";
 export default function WeekPanel(props) {
diff --git a/es/PickerPanel/YearPanel/index.d.ts b/es/PickerPanel/YearPanel/index.d.ts
index a3d96807bfa0702fa2adc854d9bb9b5e526143f4..030fc5707fc708e1287aea19390fd9159758ac21 100644
--- a/es/PickerPanel/YearPanel/index.d.ts
+++ b/es/PickerPanel/YearPanel/index.d.ts
@@ -1,3 +1,3 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { SharedPanelProps } from '../../interface';
 export default function YearPanel<DateType extends object = any>(props: SharedPanelProps<DateType>): React.JSX.Element;
diff --git a/es/PickerPanel/YearPanel/index.js b/es/PickerPanel/YearPanel/index.js
index cb7b654af834f40cfeb12a0cc3c845872d850cc5..f5b60b654cf3da25f4d26bb838e5aca6ff0011f4 100644
--- a/es/PickerPanel/YearPanel/index.js
+++ b/es/PickerPanel/YearPanel/index.js
@@ -1,7 +1,7 @@
 import _extends from "@babel/runtime/helpers/esm/extends";
 import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { formatValue, isInRange, isSameYear } from "../../utils/dateUtil";
 import { PanelContext, useInfo } from "../context";
 import PanelBody from "../PanelBody";
diff --git a/es/PickerPanel/context.d.ts b/es/PickerPanel/context.d.ts
index e80d438d875b719924349373550668689eb9a5f5..374780d1cfd7029e6e21904c15cd903d15f1e55d 100644
--- a/es/PickerPanel/context.d.ts
+++ b/es/PickerPanel/context.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { PanelMode, SharedPanelProps } from '../interface';
 export interface PanelContextProps<DateType extends object = any> extends Pick<SharedPanelProps<DateType>, 'prefixCls' | 'cellRender' | 'generateConfig' | 'locale' | 'onSelect' | 'hoverValue' | 'hoverRangeValue' | 'onHover' | 'values' | 'pickerValue' | 'disabledDate' | 'minDate' | 'maxDate' | 'prevIcon' | 'nextIcon' | 'superPrevIcon' | 'superNextIcon'> {
     /** Tell current panel type */
diff --git a/es/PickerPanel/context.js b/es/PickerPanel/context.js
index 230df0bc586ede5aca636a9a7164391806b813b4..a522968842773e24dac00a850279657b8c50c471 100644
--- a/es/PickerPanel/context.js
+++ b/es/PickerPanel/context.js
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 /** Used for each single Panel. e.g. DatePanel */
 export var PanelContext = /*#__PURE__*/React.createContext(null);
 export function usePanelContext() {
diff --git a/es/PickerPanel/index.d.ts b/es/PickerPanel/index.d.ts
index a5ef7718f8d45b56302be63c098443f39ceb7044..3cc26a5ea7fafeb9ccbe4860af9c2486909e8bec 100644
--- a/es/PickerPanel/index.d.ts
+++ b/es/PickerPanel/index.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { CellRender, Components, Locale, OnPanelChange, PanelMode, PickerMode, SharedPanelProps, SharedTimeProps } from '../interface';
 export interface PickerPanelRef {
     nativeElement: HTMLDivElement;
diff --git a/es/PickerPanel/index.js b/es/PickerPanel/index.js
index d5e81318a5f8802082d12ce1b4eedd1d122f1de7..17a80bb1a90353fa8702dd28feb36882a6a0a881 100644
--- a/es/PickerPanel/index.js
+++ b/es/PickerPanel/index.js
@@ -5,7 +5,7 @@ import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import classNames from 'classnames';
 import { useEvent, useMergedState, warning } from 'rc-util';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import useLocale from "../hooks/useLocale";
 import { fillShowTimeConfig, getTimeProps } from "../hooks/useTimeConfig";
 import useToggleDates from "../hooks/useToggleDates";
diff --git a/es/PickerTrigger/index.d.ts b/es/PickerTrigger/index.d.ts
index b093ddb69758a4514f95a91b5e517fd503efb726..c5285b86b493ff55f9158603140e5105fedbb272 100644
--- a/es/PickerTrigger/index.d.ts
+++ b/es/PickerTrigger/index.d.ts
@@ -1,5 +1,5 @@
 import type { AlignType, BuildInPlacements } from '@rc-component/trigger/lib/interface';
-import * as React from 'react';
+import * as React from 'preact/compat';
 export type PickerTriggerProps = {
     popupElement: React.ReactElement;
     popupStyle?: React.CSSProperties;
diff --git a/es/PickerTrigger/index.js b/es/PickerTrigger/index.js
index d28995920b681895a4c0ba6ed4007f2b9f5c6f06..42bc8bb106d9ed66acc7bccd381cbdb26bdcc396 100644
--- a/es/PickerTrigger/index.js
+++ b/es/PickerTrigger/index.js
@@ -1,7 +1,7 @@
 import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
 import Trigger from '@rc-component/trigger';
 import classNames from 'classnames';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { getRealPlacement } from "../utils/uiUtil";
 import PickerContext from "../PickerInput/context";
 var BUILT_IN_PLACEMENTS = {
diff --git a/es/hooks/useLocale.js b/es/hooks/useLocale.js
index cc1a8bea3d0ffc308a0d03e4cc73d6ad21cdcdc2..2667294c7bdc578dba554da95ab8c321ee345f1f 100644
--- a/es/hooks/useLocale.js
+++ b/es/hooks/useLocale.js
@@ -1,5 +1,5 @@
 import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
-import React from 'react';
+import React from 'preact/compat';
 export function fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, showMeridiem) {
   var timeFormat = '';
 
diff --git a/es/hooks/useSyncState.js b/es/hooks/useSyncState.js
index 274caf4d6fc3379cc58a2e95be71db262498c416..6c6f02bf4e6375e75e47151330b319676f45e832 100644
--- a/es/hooks/useSyncState.js
+++ b/es/hooks/useSyncState.js
@@ -1,5 +1,5 @@
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
-import * as React from 'react';
+import * as React from 'preact/compat';
 
 /**
  * Sync value with state.
diff --git a/es/hooks/useTimeInfo.d.ts b/es/hooks/useTimeInfo.d.ts
index f7929eae76b7a091d976c00201b97c1a20e712b3..9574b1de61bdeafdcbb3ae4388baf4f86048db0f 100644
--- a/es/hooks/useTimeInfo.d.ts
+++ b/es/hooks/useTimeInfo.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { GenerateConfig } from '../generate';
 import type { SharedTimeProps } from '../interface';
 export type Unit<ValueType = number | string> = {
diff --git a/es/hooks/useTimeInfo.js b/es/hooks/useTimeInfo.js
index 21db877e13339c04c3f508d80694fc7fa1cd3a93..3e93e7b4bba1273de2cfe5df94651930d012f996 100644
--- a/es/hooks/useTimeInfo.js
+++ b/es/hooks/useTimeInfo.js
@@ -1,7 +1,7 @@
 import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import { warning } from 'rc-util';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { findValidateTime } from "../PickerPanel/TimePanel/TimePanelBody/util";
 import { leftPad } from "../utils/miscUtil";
 function emptyDisabled() {
diff --git a/lib/PickerInput/Popup/Footer.d.ts b/lib/PickerInput/Popup/Footer.d.ts
index d17a328584e76a8fc147ae1b2650664f1e354fb9..1408b960a9d5bdf128afda3c80bdbfa64fb7d577 100644
--- a/lib/PickerInput/Popup/Footer.d.ts
+++ b/lib/PickerInput/Popup/Footer.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { GenerateConfig } from '../../generate';
 import type { DisabledDate, InternalMode, PanelMode, SharedPickerProps } from '../../interface';
 import type { PopupShowTimeConfig } from '.';
diff --git a/lib/PickerInput/Popup/PopupPanel.d.ts b/lib/PickerInput/Popup/PopupPanel.d.ts
index 09c9dd4fe0ca5746d19d013af75aeeda1da20b64..8a3eb830720d61bfcc41358d759983b6fbd0e0e8 100644
--- a/lib/PickerInput/Popup/PopupPanel.d.ts
+++ b/lib/PickerInput/Popup/PopupPanel.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { type PickerPanelProps } from '../../PickerPanel';
 import { type FooterProps } from './Footer';
 export type MustProp<DateType extends object> = Required<Pick<PickerPanelProps<DateType>, 'mode' | 'onPanelChange'>>;
diff --git a/lib/PickerInput/Popup/PresetPanel.d.ts b/lib/PickerInput/Popup/PresetPanel.d.ts
index cf7b027eb7cadcf81ac2782ad70fe7f51d9098ff..ff4d7b50187c2d1ff3430ff2f993d1cce1d00329 100644
--- a/lib/PickerInput/Popup/PresetPanel.d.ts
+++ b/lib/PickerInput/Popup/PresetPanel.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { ValueDate } from '../../interface';
 export interface PresetPanelProps<ValueType = any> {
     prefixCls: string;
diff --git a/lib/PickerInput/Popup/index.d.ts b/lib/PickerInput/Popup/index.d.ts
index e6c9a00294be56deeb99ee5a392b4a97f42d0f3e..317a406b614bfe388a73f3240e3cbc149c2c572a 100644
--- a/lib/PickerInput/Popup/index.d.ts
+++ b/lib/PickerInput/Popup/index.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { RangeTimeProps, SharedPickerProps, SharedTimeProps, ValueDate } from '../../interface';
 import { type FooterProps } from './Footer';
 import { type PopupPanelProps } from './PopupPanel';
diff --git a/lib/PickerInput/RangePicker.d.ts b/lib/PickerInput/RangePicker.d.ts
index b959328893ace44787c0f2683f65a2cb495b4f58..53c96b5795f7e3c31e7ae5f02fbb99eaf4349da2 100644
--- a/lib/PickerInput/RangePicker.d.ts
+++ b/lib/PickerInput/RangePicker.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { BaseInfo, PanelMode, RangePickerRef, RangeTimeProps, SharedPickerProps, ValueDate } from '../interface';
 import { type SelectorIdType } from './Selector/RangeSelector';
 export type RangeValueType<DateType> = [
diff --git a/lib/PickerInput/Selector/Icon.d.ts b/lib/PickerInput/Selector/Icon.d.ts
index ab89b8e48eff442a84287cbcdf5a7cebc6e882c9..922a78402a62c5917d9cfa92d30d9f42cf2a8cb8 100644
--- a/lib/PickerInput/Selector/Icon.d.ts
+++ b/lib/PickerInput/Selector/Icon.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 export interface IconProps extends React.HtmlHTMLAttributes<HTMLElement> {
     icon?: React.ReactNode;
     type: 'suffix' | 'clear';
diff --git a/lib/PickerInput/Selector/Input.d.ts b/lib/PickerInput/Selector/Input.d.ts
index fb59bd62600fb372d0bf1820abdc938dbcbfc90e..ac2d27cab21e59ae6cd8e7c8ec26a84780e5e2c4 100644
--- a/lib/PickerInput/Selector/Input.d.ts
+++ b/lib/PickerInput/Selector/Input.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { PickerRef } from '../../interface';
 export interface InputRef extends PickerRef {
     inputElement: HTMLInputElement;
diff --git a/lib/PickerInput/Selector/RangeSelector.d.ts b/lib/PickerInput/Selector/RangeSelector.d.ts
index 61541202e5970d6adedc12a12fc84c25b5f14b68..ee8f39b1be1f7c2cabffe8c5ad32b18931355fc0 100644
--- a/lib/PickerInput/Selector/RangeSelector.d.ts
+++ b/lib/PickerInput/Selector/RangeSelector.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { RangePickerRef, SelectorProps } from '../../interface';
 export type SelectorIdType = string | {
     start?: string;
diff --git a/lib/PickerInput/Selector/SingleSelector/MultipleDates.d.ts b/lib/PickerInput/Selector/SingleSelector/MultipleDates.d.ts
index 7ce602d2ecae71864e9b93955c6be2787c0db103..86c6dd827f020af5a4fa8af0c7e9e570c3678f21 100644
--- a/lib/PickerInput/Selector/SingleSelector/MultipleDates.d.ts
+++ b/lib/PickerInput/Selector/SingleSelector/MultipleDates.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { PickerProps } from '../../SinglePicker';
 export interface MultipleDatesProps<DateType extends object = any> extends Pick<PickerProps, 'maxTagCount'> {
     prefixCls: string;
diff --git a/lib/PickerInput/Selector/SingleSelector/index.d.ts b/lib/PickerInput/Selector/SingleSelector/index.d.ts
index 16324e89cb1e8b7f84ddf8a3f85350a37d288aae..37ce0c59d1e96bf75b8ca6e733d907a49f29d1be 100644
--- a/lib/PickerInput/Selector/SingleSelector/index.d.ts
+++ b/lib/PickerInput/Selector/SingleSelector/index.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { InternalMode, PickerRef, SelectorProps } from '../../../interface';
 import type { PickerProps } from '../../SinglePicker';
 export interface SingleSelectorProps<DateType extends object = any> extends SelectorProps<DateType>, Pick<PickerProps, 'multiple' | 'maxTagCount'> {
diff --git a/lib/PickerInput/Selector/hooks/useClearIcon.d.ts b/lib/PickerInput/Selector/hooks/useClearIcon.d.ts
index 72dcc58c9caaca7e13259f910e6a3ec15bd0a8c7..bf37fa71de222fed52dfaf3628a924ca8f9cb0b8 100644
--- a/lib/PickerInput/Selector/hooks/useClearIcon.d.ts
+++ b/lib/PickerInput/Selector/hooks/useClearIcon.d.ts
@@ -1,5 +1,5 @@
-import type { ReactNode } from 'react';
-import * as React from 'react';
+import type { ReactNode } from 'preact/compat';
+import * as React from 'preact/compat';
 /**
  * Used for `useFilledProps` since it already in the React.useMemo
  */
diff --git a/lib/PickerInput/Selector/hooks/useRootProps.d.ts b/lib/PickerInput/Selector/hooks/useRootProps.d.ts
index 23f258bd84b8bf452915e938b88b49680a5fe948..663cc789f26cb2b08d5d0ec8fd50bfb0e906ef54 100644
--- a/lib/PickerInput/Selector/hooks/useRootProps.d.ts
+++ b/lib/PickerInput/Selector/hooks/useRootProps.d.ts
@@ -1,2 +1,2 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 export default function useRootProps(props: React.HTMLAttributes<any>): React.HTMLAttributes<any>;
diff --git a/lib/PickerInput/SinglePicker.d.ts b/lib/PickerInput/SinglePicker.d.ts
index 012a62af9835cbe08dab1e7df181c5cbe3935467..2b9d1102133c4f51664a69d15f58b09de8e6e3f0 100644
--- a/lib/PickerInput/SinglePicker.d.ts
+++ b/lib/PickerInput/SinglePicker.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { BaseInfo, PanelMode, PickerRef, SharedPickerProps, SharedTimeProps, ValueDate } from '../interface';
 export interface BasePickerProps<DateType extends object = any> extends SharedPickerProps<DateType> {
     id?: string;
diff --git a/lib/PickerInput/context.d.ts b/lib/PickerInput/context.d.ts
index 8de34f7178633c5a7586192b57170ac8aa0f77e2..68a499aa8a87aa03c3b5c32ba3105d0f9c606101 100644
--- a/lib/PickerInput/context.d.ts
+++ b/lib/PickerInput/context.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { GenerateConfig } from '../generate';
 import type { Components, Locale } from '../interface';
 export interface PickerContextProps<DateType = any> {
diff --git a/lib/PickerInput/hooks/usePickerRef.d.ts b/lib/PickerInput/hooks/usePickerRef.d.ts
index a9db471c6ebcf4048737f2ef4ef76d2dc2f6007c..f2321640af3bc7e554e0c056a95fd017da736b7e 100644
--- a/lib/PickerInput/hooks/usePickerRef.d.ts
+++ b/lib/PickerInput/hooks/usePickerRef.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { PickerRef } from '../../interface';
 type PickerRefType<OptionType> = Omit<PickerRef, 'focus'> & {
     focus: (options?: OptionType) => void;
diff --git a/lib/PickerPanel/DatePanel/index.d.ts b/lib/PickerPanel/DatePanel/index.d.ts
index 2b0a3247d3a1a34240853db16007b49e7a430f06..1b2af5c2db529708a1ea4e4100712df85ea3e6d7 100644
--- a/lib/PickerPanel/DatePanel/index.d.ts
+++ b/lib/PickerPanel/DatePanel/index.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { PanelMode, SharedPanelProps } from '../../interface';
 export interface DatePanelProps<DateType extends object> extends SharedPanelProps<DateType> {
     panelName?: PanelMode;
diff --git a/lib/PickerPanel/DateTimePanel/index.d.ts b/lib/PickerPanel/DateTimePanel/index.d.ts
index 7bcf311116c404c2d3e776927a6e666bd0d7d656..00c31953d746a7a5e1944ccb2b9c8ab71771f37c 100644
--- a/lib/PickerPanel/DateTimePanel/index.d.ts
+++ b/lib/PickerPanel/DateTimePanel/index.d.ts
@@ -1,3 +1,3 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { SharedPanelProps } from '../../interface';
 export default function DateTimePanel<DateType extends object = any>(props: SharedPanelProps<DateType>): React.JSX.Element;
diff --git a/lib/PickerPanel/DecadePanel/index.d.ts b/lib/PickerPanel/DecadePanel/index.d.ts
index 06516e90585cd905be2e9b702599deb378e01f59..934bedf37716b0576f01c389974bd00de81078e6 100644
--- a/lib/PickerPanel/DecadePanel/index.d.ts
+++ b/lib/PickerPanel/DecadePanel/index.d.ts
@@ -1,3 +1,3 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { SharedPanelProps } from '../../interface';
 export default function DecadePanel<DateType extends object = any>(props: SharedPanelProps<DateType>): React.JSX.Element;
diff --git a/lib/PickerPanel/MonthPanel/index.d.ts b/lib/PickerPanel/MonthPanel/index.d.ts
index a6b03d9d6a19c7497def1598f022e7942f3b84f0..7ea98d4e0d0a6ff2d858a9034a00ed459a00b738 100644
--- a/lib/PickerPanel/MonthPanel/index.d.ts
+++ b/lib/PickerPanel/MonthPanel/index.d.ts
@@ -1,3 +1,3 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { SharedPanelProps } from '../../interface';
 export default function MonthPanel<DateType extends object = any>(props: SharedPanelProps<DateType>): React.JSX.Element;
diff --git a/lib/PickerPanel/PanelBody.d.ts b/lib/PickerPanel/PanelBody.d.ts
index acef1980adcbf7fcc480993dd346cad90d66e1d5..76296276a825dcb2a2b2fd5490d45518a69bfe99 100644
--- a/lib/PickerPanel/PanelBody.d.ts
+++ b/lib/PickerPanel/PanelBody.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { DisabledDate } from '../interface';
 export interface PanelBodyProps<DateType = any> {
     rowNum: number;
diff --git a/lib/PickerPanel/PanelHeader.d.ts b/lib/PickerPanel/PanelHeader.d.ts
index f83aaf68e84710fa8116ed6fc895bc127291f55c..c865f51e9124d346a3a2c517d275b05d95575dcc 100644
--- a/lib/PickerPanel/PanelHeader.d.ts
+++ b/lib/PickerPanel/PanelHeader.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 export interface HeaderProps<DateType extends object> {
     offset?: (distance: number, date: DateType) => DateType;
     superOffset?: (distance: number, date: DateType) => DateType;
diff --git a/lib/PickerPanel/QuarterPanel/index.d.ts b/lib/PickerPanel/QuarterPanel/index.d.ts
index 719d30d1ebd9b46d43b3332dbbccb5f37125eeef..7e2494754c21562d26b4b91d20d0ec56153acca6 100644
--- a/lib/PickerPanel/QuarterPanel/index.d.ts
+++ b/lib/PickerPanel/QuarterPanel/index.d.ts
@@ -1,3 +1,3 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { SharedPanelProps } from '../../interface';
 export default function QuarterPanel<DateType extends object = any>(props: SharedPanelProps<DateType>): React.JSX.Element;
diff --git a/lib/PickerPanel/TimePanel/TimePanelBody/TimeColumn.d.ts b/lib/PickerPanel/TimePanel/TimePanelBody/TimeColumn.d.ts
index e2f6da65ba01261f47b78dd7a49bdc3e0278eb92..5896aa72ddea65de58032320446a5448bd36e45f 100644
--- a/lib/PickerPanel/TimePanel/TimePanelBody/TimeColumn.d.ts
+++ b/lib/PickerPanel/TimePanel/TimePanelBody/TimeColumn.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 export type Unit<ValueType = number | string> = {
     label: React.ReactText;
     value: ValueType;
diff --git a/lib/PickerPanel/TimePanel/TimePanelBody/index.d.ts b/lib/PickerPanel/TimePanel/TimePanelBody/index.d.ts
index 8258e410ff12d7daa7ffa8aec5527908ccadf1a3..233c70a8997ac13a6758a55fd2eb0713b40e68e8 100644
--- a/lib/PickerPanel/TimePanel/TimePanelBody/index.d.ts
+++ b/lib/PickerPanel/TimePanel/TimePanelBody/index.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { SharedPanelProps, SharedTimeProps } from '../../../interface';
 export type TimePanelBodyProps<DateType extends object = any> = SharedPanelProps<DateType>;
 export default function TimePanelBody<DateType extends object = any>(props: SharedTimeProps<DateType>): React.JSX.Element;
diff --git a/lib/PickerPanel/TimePanel/TimePanelBody/useScrollTo.d.ts b/lib/PickerPanel/TimePanel/TimePanelBody/useScrollTo.d.ts
index af05904b2395fc66c8c9f1f43a0e4b71a49ac1db..d33c529ef17b347d15d72fc07097a949d16f0614 100644
--- a/lib/PickerPanel/TimePanel/TimePanelBody/useScrollTo.d.ts
+++ b/lib/PickerPanel/TimePanel/TimePanelBody/useScrollTo.d.ts
@@ -1,2 +1,2 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 export default function useScrollTo(ulRef: React.RefObject<HTMLUListElement>, value: number | string): [syncScroll: VoidFunction, clearScroll: VoidFunction, isScrolling: () => boolean];
diff --git a/lib/PickerPanel/TimePanel/index.d.ts b/lib/PickerPanel/TimePanel/index.d.ts
index 2dee14a9a385e2ed55fcb084f979593c89054cfe..4a1c8443b7d09e073333d74deeec52695d0a94e1 100644
--- a/lib/PickerPanel/TimePanel/index.d.ts
+++ b/lib/PickerPanel/TimePanel/index.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { SharedPanelProps } from '../../interface';
 export type TimePanelProps<DateType extends object> = SharedPanelProps<DateType>;
 export default function TimePanel<DateType extends object = any>(props: TimePanelProps<DateType>): React.JSX.Element;
diff --git a/lib/PickerPanel/WeekPanel/index.d.ts b/lib/PickerPanel/WeekPanel/index.d.ts
index 614d9f4892ab4703f15a9ff104d616d7e53072f9..fd770a2f7df2f7f138c11730cd02883b0089f3ae 100644
--- a/lib/PickerPanel/WeekPanel/index.d.ts
+++ b/lib/PickerPanel/WeekPanel/index.d.ts
@@ -1,3 +1,3 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { SharedPanelProps } from '../../interface';
 export default function WeekPanel<DateType extends object = any>(props: SharedPanelProps<DateType>): React.JSX.Element;
diff --git a/lib/PickerPanel/YearPanel/index.d.ts b/lib/PickerPanel/YearPanel/index.d.ts
index a3d96807bfa0702fa2adc854d9bb9b5e526143f4..030fc5707fc708e1287aea19390fd9159758ac21 100644
--- a/lib/PickerPanel/YearPanel/index.d.ts
+++ b/lib/PickerPanel/YearPanel/index.d.ts
@@ -1,3 +1,3 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { SharedPanelProps } from '../../interface';
 export default function YearPanel<DateType extends object = any>(props: SharedPanelProps<DateType>): React.JSX.Element;
diff --git a/lib/PickerPanel/context.d.ts b/lib/PickerPanel/context.d.ts
index e80d438d875b719924349373550668689eb9a5f5..374780d1cfd7029e6e21904c15cd903d15f1e55d 100644
--- a/lib/PickerPanel/context.d.ts
+++ b/lib/PickerPanel/context.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { PanelMode, SharedPanelProps } from '../interface';
 export interface PanelContextProps<DateType extends object = any> extends Pick<SharedPanelProps<DateType>, 'prefixCls' | 'cellRender' | 'generateConfig' | 'locale' | 'onSelect' | 'hoverValue' | 'hoverRangeValue' | 'onHover' | 'values' | 'pickerValue' | 'disabledDate' | 'minDate' | 'maxDate' | 'prevIcon' | 'nextIcon' | 'superPrevIcon' | 'superNextIcon'> {
     /** Tell current panel type */
diff --git a/lib/PickerPanel/index.d.ts b/lib/PickerPanel/index.d.ts
index a5ef7718f8d45b56302be63c098443f39ceb7044..3cc26a5ea7fafeb9ccbe4860af9c2486909e8bec 100644
--- a/lib/PickerPanel/index.d.ts
+++ b/lib/PickerPanel/index.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { CellRender, Components, Locale, OnPanelChange, PanelMode, PickerMode, SharedPanelProps, SharedTimeProps } from '../interface';
 export interface PickerPanelRef {
     nativeElement: HTMLDivElement;
diff --git a/lib/PickerTrigger/index.d.ts b/lib/PickerTrigger/index.d.ts
index b093ddb69758a4514f95a91b5e517fd503efb726..c5285b86b493ff55f9158603140e5105fedbb272 100644
--- a/lib/PickerTrigger/index.d.ts
+++ b/lib/PickerTrigger/index.d.ts
@@ -1,5 +1,5 @@
 import type { AlignType, BuildInPlacements } from '@rc-component/trigger/lib/interface';
-import * as React from 'react';
+import * as React from 'preact/compat';
 export type PickerTriggerProps = {
     popupElement: React.ReactElement;
     popupStyle?: React.CSSProperties;
diff --git a/lib/hooks/useTimeInfo.d.ts b/lib/hooks/useTimeInfo.d.ts
index f7929eae76b7a091d976c00201b97c1a20e712b3..9574b1de61bdeafdcbb3ae4388baf4f86048db0f 100644
--- a/lib/hooks/useTimeInfo.d.ts
+++ b/lib/hooks/useTimeInfo.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { GenerateConfig } from '../generate';
 import type { SharedTimeProps } from '../interface';
 export type Unit<ValueType = number | string> = {
diff --git a/package.json b/package.json
index 85b1d95c8331bb42c63efdf628b4ca7bd0715a15..949b413435937a23e99f889381eab6bad2713a3a 100644
--- a/package.json
+++ b/package.json
@@ -41,10 +41,10 @@
   "dependencies": {
     "@babel/runtime": "^7.24.7",
     "@rc-component/trigger": "^2.0.0",
-    "classnames": "^2.2.1",
     "rc-overflow": "^1.3.2",
     "rc-resize-observer": "^1.4.0",
-    "rc-util": "^5.43.0"
+    "rc-util": "^5.43.0",
+    "clsx": "^2.1.1"
   },
   "engines": {
     "node": ">=8.x"
@@ -78,17 +78,15 @@
     "np": "^10.0.2",
     "prettier": "^3.1.0",
     "rc-test": "^7.0.9",
-    "react": "^18.2.0",
-    "react-dom": "^18.2.0",
-    "typescript": "^5.3.0"
+    "typescript": "^5.3.0",
+    "preact": "^10.22.1"
   },
   "peerDependencies": {
     "date-fns": ">= 2.x",
     "dayjs": ">= 1.x",
     "luxon": ">= 3.x",
     "moment": ">= 2.x",
-    "react": ">=16.9.0",
-    "react-dom": ">=16.9.0"
+    "preact": "^10.22.1"
   },
   "peerDependenciesMeta": {
     "date-fns": {

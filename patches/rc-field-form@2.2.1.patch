diff --git a/es/Field.d.ts b/es/Field.d.ts
index c0993781d4bd51c17ecea58f6c24caff043e8da4..814f7ef29a110f4b68f85781c5afc6225b14d09c 100644
--- a/es/Field.d.ts
+++ b/es/Field.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { EventArgs, FormInstance, InternalFormInstance, InternalNamePath, Meta, NamePath, Rule, Store, StoreValue } from './interface';
 export type ShouldUpdate<Values = any> = boolean | ((prevValues: Values, nextValues: Values, info: {
     source?: string;
diff --git a/es/Field.js b/es/Field.js
index 6a470c66530d922be7037ad0ede22936731b3906..a2c55589347027b3ec72f8306940458e0a14e9f0 100644
--- a/es/Field.js
+++ b/es/Field.js
@@ -14,7 +14,7 @@ var _excluded = ["name"];
 import toChildrenArray from "rc-util/es/Children/toArray";
 import isEqual from "rc-util/es/isEqual";
 import warning from "rc-util/es/warning";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import FieldContext, { HOOK_MARK } from "./FieldContext";
 import ListContext from "./ListContext";
 import { toArray } from "./utils/typeUtil";
diff --git a/es/FieldContext.d.ts b/es/FieldContext.d.ts
index 67010762a071392ab49d85f3689ae6c874da89f0..7cec9af235e3ab45cabf0768ff657b47233188f5 100644
--- a/es/FieldContext.d.ts
+++ b/es/FieldContext.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { InternalFormInstance } from './interface';
 export declare const HOOK_MARK = "RC_FORM_INTERNAL_HOOKS";
 declare const Context: React.Context<InternalFormInstance>;
diff --git a/es/FieldContext.js b/es/FieldContext.js
index b65b3472bed012769a65a54fd4b6a2d09451ce60..c4962e8e80e15b7a2a53d122f575ccd30b0b9279 100644
--- a/es/FieldContext.js
+++ b/es/FieldContext.js
@@ -1,5 +1,5 @@
 import warning from "rc-util/es/warning";
-import * as React from 'react';
+import * as React from 'preact/compat';
 export var HOOK_MARK = 'RC_FORM_INTERNAL_HOOKS';
 
 // eslint-disable-next-line @typescript-eslint/no-explicit-any
diff --git a/es/Form.d.ts b/es/Form.d.ts
index cb414cbb28e701cfbbed44b1a556d3e4d1aa9147..4f97870d8c1b7e72299698784621e6138409078c 100644
--- a/es/Form.d.ts
+++ b/es/Form.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { Store, FormInstance, FieldData, ValidateMessages, Callbacks, FormRef } from './interface';
 type BaseFormProps = Omit<React.FormHTMLAttributes<HTMLFormElement>, 'onSubmit' | 'children'>;
 type RenderProps = (values: Store, form: FormInstance) => JSX.Element | React.ReactNode;
diff --git a/es/Form.js b/es/Form.js
index f0163ee1af609cda522831bc2aa3a00663a75040..3cde200de5ea08d6443c7f626a3ed8425e72e637 100644
--- a/es/Form.js
+++ b/es/Form.js
@@ -3,7 +3,7 @@ import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
 var _excluded = ["name", "initialValues", "fields", "form", "preserve", "children", "component", "validateMessages", "validateTrigger", "onValuesChange", "onFieldsChange", "onFinish", "onFinishFailed", "clearOnDestroy"];
-import * as React from 'react';
+import * as React from 'preact/compat';
 import useForm from "./useForm";
 import FieldContext, { HOOK_MARK } from "./FieldContext";
 import FormContext from "./FormContext";
diff --git a/es/FormContext.d.ts b/es/FormContext.d.ts
index 456a6ef3f47e091cc73e4f2cdff450f7ac112ad5..9c987f51c0248625116a7b7f96459085f59fdf4d 100644
--- a/es/FormContext.d.ts
+++ b/es/FormContext.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { ValidateMessages, FormInstance, FieldData, Store } from './interface';
 export type Forms = Record<string, FormInstance>;
 export interface FormChangeInfo {
diff --git a/es/FormContext.js b/es/FormContext.js
index cc81370311e16629f1a940ef6699f650b4872a8d..3f29328da213494873124a0e99f0aafa693867e7 100644
--- a/es/FormContext.js
+++ b/es/FormContext.js
@@ -1,6 +1,6 @@
 import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
 import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
-import * as React from 'react';
+import * as React from 'preact/compat';
 var FormContext = /*#__PURE__*/React.createContext({
   triggerFormChange: function triggerFormChange() {},
   triggerFormFinish: function triggerFormFinish() {},
diff --git a/es/List.d.ts b/es/List.d.ts
index 5da7991537f0cfc56bd51e1d2f894c620c8e4428..38ea9bc7194780a08bba7cf7456b72a2640e01ee 100644
--- a/es/List.d.ts
+++ b/es/List.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { NamePath, StoreValue, ValidatorRule, Meta } from './interface';
 export interface ListField {
     name: number;
diff --git a/es/List.js b/es/List.js
index e122a666d6e8adb5a8204c2f5f45d712480b0195..c30a4bd7460cb880190f94d94b6f3e307f7b35aa 100644
--- a/es/List.js
+++ b/es/List.js
@@ -1,6 +1,6 @@
 import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
 import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import warning from "rc-util/es/warning";
 import FieldContext from "./FieldContext";
 import Field from "./Field";
diff --git a/es/ListContext.d.ts b/es/ListContext.d.ts
index d620e384b600aa0ff82c3e462689d8bf94b6ea9e..fc9a19ed47c8d73a73aff9f39ac21e4c5fd2ac86 100644
--- a/es/ListContext.d.ts
+++ b/es/ListContext.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { InternalNamePath } from './interface';
 export interface ListContextProps {
     getKey: (namePath: InternalNamePath) => [InternalNamePath[number], InternalNamePath];
diff --git a/es/ListContext.js b/es/ListContext.js
index d9a54e5587bd5504b9773ff3cc77632da3c5721e..f5a4718913a8b909b43fcbe6474134a8f5771bf5 100644
--- a/es/ListContext.js
+++ b/es/ListContext.js
@@ -1,3 +1,3 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 var ListContext = /*#__PURE__*/React.createContext(null);
 export default ListContext;
\ No newline at end of file
diff --git a/es/index.d.ts b/es/index.d.ts
index d2cf8606b7323aed7575cf72a0a5cd6fa23c2c3b..82b40a1cc8555eafcf7c73b3c9c79085338d43b5 100644
--- a/es/index.d.ts
+++ b/es/index.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { FormRef, FormInstance } from './interface';
 import Field from './Field';
 import List from './List';
diff --git a/es/index.js b/es/index.js
index ede2f7e6c52174ac15bfe1af5c951aee0c12d034..6f8c45883d30d311b8b5d729e8e44c0321f7afdd 100644
--- a/es/index.js
+++ b/es/index.js
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import Field from "./Field";
 import List from "./List";
 import useForm from "./useForm";
diff --git a/es/interface.d.ts b/es/interface.d.ts
index 0927ee213724e32c6dc6fec81e647752ab812c62..7e0c8993369b4f85e6c83e2ca842b879dfc56936 100644
--- a/es/interface.d.ts
+++ b/es/interface.d.ts
@@ -1,4 +1,4 @@
-import type { ReactElement } from 'react';
+import type { ReactElement } from 'preact/compat';
 import type { DeepNamePath } from './namePathType';
 import type { ReducerAction } from './useForm';
 export type InternalNamePath = (string | number)[];
diff --git a/es/useForm.js b/es/useForm.js
index 24f386098bde375f597a52576cf8e9e906624b91..b5bc0cf0c2ad2f6b59a8370f584056d5798aead9 100644
--- a/es/useForm.js
+++ b/es/useForm.js
@@ -9,7 +9,7 @@ import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
 var _excluded = ["name"];
 import { merge } from "rc-util/es/utils/set";
 import warning from "rc-util/es/warning";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { HOOK_MARK } from "./FieldContext";
 import { allPromiseFinish } from "./utils/asyncUtil";
 import { defaultValidateMessages } from "./utils/messages";
diff --git a/es/useWatch.js b/es/useWatch.js
index 059e5dddc1712313945b5aac39470b11dac77209..b62bd3fc6364cee8feaf0276246545141e018f20 100644
--- a/es/useWatch.js
+++ b/es/useWatch.js
@@ -1,6 +1,6 @@
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import warning from "rc-util/es/warning";
-import { useContext, useEffect, useMemo, useRef, useState } from 'react';
+import { useContext, useEffect, useMemo, useRef, useState } from 'preact/compat';
 import FieldContext, { HOOK_MARK } from "./FieldContext";
 import { isFormInstance } from "./utils/typeUtil";
 import { getNamePath, getValue } from "./utils/valueUtil";
diff --git a/es/utils/validateUtil.js b/es/utils/validateUtil.js
index 73178edb6f8fa7a099a556ad592023c4946eb4db..f737c7585aa48f4c0e3bd7d6052fc6fb010dd59e 100644
--- a/es/utils/validateUtil.js
+++ b/es/utils/validateUtil.js
@@ -4,7 +4,7 @@ import _regeneratorRuntime from "@babel/runtime/helpers/esm/regeneratorRuntime";
 import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
 import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
 import RawAsyncValidator from '@rc-component/async-validator';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import warning from "rc-util/es/warning";
 import { defaultValidateMessages } from "./messages";
 import { merge } from "rc-util/es/utils/set";
diff --git a/es/~useWatch.js b/es/~useWatch.js
index a5453b759f131e541942c52ee2e0b32a5066b0bb..aec330c00251cb725c268e5d1f2eb59ce489f4b3 100644
--- a/es/~useWatch.js
+++ b/es/~useWatch.js
@@ -1,7 +1,7 @@
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import warning from "rc-util/es/warning";
 import FieldContext, { HOOK_MARK } from "./FieldContext";
-import { useState, useContext, useEffect, useRef, useMemo } from 'react';
+import { useState, useContext, useEffect, useRef, useMemo } from 'preact/compat';
 import { getNamePath, getValue } from "./utils/valueUtil";
 import { isFormInstance } from "./utils/typeUtil";
 export function stringify(value) {
diff --git a/lib/Field.d.ts b/lib/Field.d.ts
index c0993781d4bd51c17ecea58f6c24caff043e8da4..814f7ef29a110f4b68f85781c5afc6225b14d09c 100644
--- a/lib/Field.d.ts
+++ b/lib/Field.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { EventArgs, FormInstance, InternalFormInstance, InternalNamePath, Meta, NamePath, Rule, Store, StoreValue } from './interface';
 export type ShouldUpdate<Values = any> = boolean | ((prevValues: Values, nextValues: Values, info: {
     source?: string;
diff --git a/lib/FieldContext.d.ts b/lib/FieldContext.d.ts
index 67010762a071392ab49d85f3689ae6c874da89f0..7cec9af235e3ab45cabf0768ff657b47233188f5 100644
--- a/lib/FieldContext.d.ts
+++ b/lib/FieldContext.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { InternalFormInstance } from './interface';
 export declare const HOOK_MARK = "RC_FORM_INTERNAL_HOOKS";
 declare const Context: React.Context<InternalFormInstance>;
diff --git a/lib/Form.d.ts b/lib/Form.d.ts
index cb414cbb28e701cfbbed44b1a556d3e4d1aa9147..4f97870d8c1b7e72299698784621e6138409078c 100644
--- a/lib/Form.d.ts
+++ b/lib/Form.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { Store, FormInstance, FieldData, ValidateMessages, Callbacks, FormRef } from './interface';
 type BaseFormProps = Omit<React.FormHTMLAttributes<HTMLFormElement>, 'onSubmit' | 'children'>;
 type RenderProps = (values: Store, form: FormInstance) => JSX.Element | React.ReactNode;
diff --git a/lib/FormContext.d.ts b/lib/FormContext.d.ts
index 456a6ef3f47e091cc73e4f2cdff450f7ac112ad5..9c987f51c0248625116a7b7f96459085f59fdf4d 100644
--- a/lib/FormContext.d.ts
+++ b/lib/FormContext.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { ValidateMessages, FormInstance, FieldData, Store } from './interface';
 export type Forms = Record<string, FormInstance>;
 export interface FormChangeInfo {
diff --git a/lib/List.d.ts b/lib/List.d.ts
index 5da7991537f0cfc56bd51e1d2f894c620c8e4428..38ea9bc7194780a08bba7cf7456b72a2640e01ee 100644
--- a/lib/List.d.ts
+++ b/lib/List.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { NamePath, StoreValue, ValidatorRule, Meta } from './interface';
 export interface ListField {
     name: number;
diff --git a/lib/ListContext.d.ts b/lib/ListContext.d.ts
index d620e384b600aa0ff82c3e462689d8bf94b6ea9e..fc9a19ed47c8d73a73aff9f39ac21e4c5fd2ac86 100644
--- a/lib/ListContext.d.ts
+++ b/lib/ListContext.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { InternalNamePath } from './interface';
 export interface ListContextProps {
     getKey: (namePath: InternalNamePath) => [InternalNamePath[number], InternalNamePath];
diff --git a/lib/index.d.ts b/lib/index.d.ts
index d2cf8606b7323aed7575cf72a0a5cd6fa23c2c3b..82b40a1cc8555eafcf7c73b3c9c79085338d43b5 100644
--- a/lib/index.d.ts
+++ b/lib/index.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { FormRef, FormInstance } from './interface';
 import Field from './Field';
 import List from './List';
diff --git a/lib/interface.d.ts b/lib/interface.d.ts
index 0927ee213724e32c6dc6fec81e647752ab812c62..7e0c8993369b4f85e6c83e2ca842b879dfc56936 100644
--- a/lib/interface.d.ts
+++ b/lib/interface.d.ts
@@ -1,4 +1,4 @@
-import type { ReactElement } from 'react';
+import type { ReactElement } from 'preact/compat';
 import type { DeepNamePath } from './namePathType';
 import type { ReducerAction } from './useForm';
 export type InternalNamePath = (string | number)[];
diff --git a/package.json b/package.json
index b141a2b857dd2c37ab6734f1c024bb84d4220f5f..c810f38975e78b31e5ee152926e032bc086140f5 100644
--- a/package.json
+++ b/package.json
@@ -73,12 +73,11 @@
     "np": "^10.0.2",
     "prettier": "^3.1.0",
     "rc-test": "^7.0.15",
-    "react": "^18.0.0",
     "react-dnd": "^16.0.1",
     "react-dnd-html5-backend": "^8.0.3",
-    "react-dom": "^18.0.0",
     "react-redux": "^9.0.4",
     "redux": "^5.0.0",
-    "typescript": "^5.1.6"
+    "typescript": "^5.1.6",
+    "preact": "^10.22.1"
   }
 }

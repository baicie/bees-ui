diff --git a/es/StyleContext.d.ts b/es/StyleContext.d.ts
index 9eb706ae5cb34809e3200459326886c0347216c0..3688d309acfc5f874817bb226375ce460213738e 100644
--- a/es/StyleContext.d.ts
+++ b/es/StyleContext.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import CacheEntity from './Cache';
 import type { Linter } from './linters/interface';
 import type { Transformer } from './transformers/interface';
diff --git a/es/StyleContext.js b/es/StyleContext.js
index 65cfa9af62f49d199e1f20644c0ba6861b7545fd..55b0c6af3410a6db07e198681022b03a6b5f95fa 100644
--- a/es/StyleContext.js
+++ b/es/StyleContext.js
@@ -3,7 +3,7 @@ import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutPr
 var _excluded = ["children"];
 import useMemo from "rc-util/es/hooks/useMemo";
 import isEqual from "rc-util/es/isEqual";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import CacheEntity from "./Cache";
 export var ATTR_TOKEN = 'data-token-hash';
 export var ATTR_MARK = 'data-css-hash';
diff --git a/es/hooks/useCSSVarRegister.js b/es/hooks/useCSSVarRegister.js
index d22538cdfb225ce23aa11e701874617b2fdf75dc..796730fc8b95539c53261d0108da1283880950ab 100644
--- a/es/hooks/useCSSVarRegister.js
+++ b/es/hooks/useCSSVarRegister.js
@@ -1,7 +1,7 @@
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
 import { removeCSS, updateCSS } from "rc-util/es/Dom/dynamicCSS";
-import { useContext } from 'react';
+import { useContext } from 'preact/compat';
 import StyleContext, { ATTR_MARK, ATTR_TOKEN, CSS_IN_JS_INSTANCE } from "../StyleContext";
 import { isClientSide, toStyleStr } from "../util";
 import { transformToken } from "../util/css-variables";
diff --git a/es/hooks/useCacheToken.js b/es/hooks/useCacheToken.js
index bacac69bd07ae6977bc40d8385ec601d5c064541..491f11767f251c555b944cbf81a1759e1c53a278 100644
--- a/es/hooks/useCacheToken.js
+++ b/es/hooks/useCacheToken.js
@@ -3,7 +3,7 @@ import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
 import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
 import hash from '@emotion/hash';
 import { updateCSS } from "rc-util/es/Dom/dynamicCSS";
-import { useContext } from 'react';
+import { useContext } from 'preact/compat';
 import StyleContext, { ATTR_MARK, ATTR_TOKEN, CSS_IN_JS_INSTANCE } from "../StyleContext";
 import { flattenToken, memoResult, token2key, toStyleStr } from "../util";
 import { transformToken } from "../util/css-variables";
diff --git a/es/hooks/useCompatibleInsertionEffect.d.ts b/es/hooks/useCompatibleInsertionEffect.d.ts
index a79aeca5a170329697f4a4d32a1891aab8df4842..e9d7d03a0120aaced3536f062043f8def0731c13 100644
--- a/es/hooks/useCompatibleInsertionEffect.d.ts
+++ b/es/hooks/useCompatibleInsertionEffect.d.ts
@@ -1,5 +1,5 @@
-import type { EffectCallback } from 'react';
-import * as React from 'react';
+import type { EffectCallback } from 'preact/compat';
+import * as React from 'preact/compat';
 type UseCompatibleInsertionEffect = (renderEffect: EffectCallback, effect: (polyfill?: boolean) => ReturnType<EffectCallback>, deps: React.DependencyList) => void;
 /**
  * Compatible `useInsertionEffect`
diff --git a/es/hooks/useCompatibleInsertionEffect.js b/es/hooks/useCompatibleInsertionEffect.js
index e03b90e9519a822e6f4a3ea9f351efb7756f6a8a..84d70f840755cb2d644fe030dc6ebe9ab2d0a43c 100644
--- a/es/hooks/useCompatibleInsertionEffect.js
+++ b/es/hooks/useCompatibleInsertionEffect.js
@@ -1,7 +1,7 @@
 import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
 // import canUseDom from 'rc-util/lib/Dom/canUseDom';
 import useLayoutEffect from "rc-util/es/hooks/useLayoutEffect";
-import * as React from 'react';
+import * as React from 'preact/compat';
 
 // We need fully clone React function here
 // to avoid webpack warning React 17 do not export `useId`
diff --git a/es/hooks/useEffectCleanupRegister.d.ts b/es/hooks/useEffectCleanupRegister.d.ts
index 2c048714d56c30162220a3f640017583b0416625..bcdef08a6926fbd2ddfebcf1eda539a5dee5eed6 100644
--- a/es/hooks/useEffectCleanupRegister.d.ts
+++ b/es/hooks/useEffectCleanupRegister.d.ts
@@ -1,3 +1,3 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 declare const useEffectCleanupRegister: (deps?: React.DependencyList) => (fn: () => void) => void;
 export default useEffectCleanupRegister;
diff --git a/es/hooks/useEffectCleanupRegister.js b/es/hooks/useEffectCleanupRegister.js
index b2fad1dc771aa09a954b1537e6dd1cee88404388..8864af362a5553e22be4989906d6e7f5aa97eaae 100644
--- a/es/hooks/useEffectCleanupRegister.js
+++ b/es/hooks/useEffectCleanupRegister.js
@@ -1,6 +1,6 @@
 import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
 import { warning } from "rc-util/es/warning";
-import * as React from 'react';
+import * as React from 'preact/compat';
 var fullClone = _objectSpread({}, React);
 var useInsertionEffect = fullClone.useInsertionEffect;
 
diff --git a/es/hooks/useGlobalCache.js b/es/hooks/useGlobalCache.js
index 5902401bb18cea1a9331cde8f250b9337a1b18bc..9a72df82b1d406973033d989882b33da5bf79269 100644
--- a/es/hooks/useGlobalCache.js
+++ b/es/hooks/useGlobalCache.js
@@ -1,6 +1,6 @@
 import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
 import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
-import * as React from 'react';
+import * as React from 'preact/compat';
 import { pathKey } from "../Cache";
 import StyleContext from "../StyleContext";
 import useCompatibleInsertionEffect from "./useCompatibleInsertionEffect";
diff --git a/es/hooks/useStyleRegister.d.ts b/es/hooks/useStyleRegister.d.ts
index 9e4f94eb6074fca6cd6ccb106e679df91166ea8f..3fa11a6101db455ba50df324d89f717e378258ae 100644
--- a/es/hooks/useStyleRegister.d.ts
+++ b/es/hooks/useStyleRegister.d.ts
@@ -1,5 +1,5 @@
 import type * as CSS from 'csstype';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { Theme, Transformer } from '..';
 import type Keyframes from '../Keyframes';
 import type { Linter } from '../linters';
diff --git a/es/hooks/useStyleRegister.js b/es/hooks/useStyleRegister.js
index c1d5668ad29feb1df064109a8606df3b73d1b292..38e13808b34dec6e1fbd671e917eb0e94da7267f 100644
--- a/es/hooks/useStyleRegister.js
+++ b/es/hooks/useStyleRegister.js
@@ -6,7 +6,7 @@ import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
 import _typeof from "@babel/runtime/helpers/esm/typeof";
 import hash from '@emotion/hash';
 import { removeCSS, updateCSS } from "rc-util/es/Dom/dynamicCSS";
-import * as React from 'react';
+import * as React from 'preact/compat';
 // @ts-ignore
 import unitless from '@emotion/unitless';
 import { compile, serialize, stringify } from 'stylis';
diff --git a/lib/StyleContext.d.ts b/lib/StyleContext.d.ts
index 9eb706ae5cb34809e3200459326886c0347216c0..3688d309acfc5f874817bb226375ce460213738e 100644
--- a/lib/StyleContext.d.ts
+++ b/lib/StyleContext.d.ts
@@ -1,4 +1,4 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 import CacheEntity from './Cache';
 import type { Linter } from './linters/interface';
 import type { Transformer } from './transformers/interface';
diff --git a/lib/hooks/useCompatibleInsertionEffect.d.ts b/lib/hooks/useCompatibleInsertionEffect.d.ts
index a79aeca5a170329697f4a4d32a1891aab8df4842..e9d7d03a0120aaced3536f062043f8def0731c13 100644
--- a/lib/hooks/useCompatibleInsertionEffect.d.ts
+++ b/lib/hooks/useCompatibleInsertionEffect.d.ts
@@ -1,5 +1,5 @@
-import type { EffectCallback } from 'react';
-import * as React from 'react';
+import type { EffectCallback } from 'preact/compat';
+import * as React from 'preact/compat';
 type UseCompatibleInsertionEffect = (renderEffect: EffectCallback, effect: (polyfill?: boolean) => ReturnType<EffectCallback>, deps: React.DependencyList) => void;
 /**
  * Compatible `useInsertionEffect`
diff --git a/lib/hooks/useEffectCleanupRegister.d.ts b/lib/hooks/useEffectCleanupRegister.d.ts
index 2c048714d56c30162220a3f640017583b0416625..bcdef08a6926fbd2ddfebcf1eda539a5dee5eed6 100644
--- a/lib/hooks/useEffectCleanupRegister.d.ts
+++ b/lib/hooks/useEffectCleanupRegister.d.ts
@@ -1,3 +1,3 @@
-import * as React from 'react';
+import * as React from 'preact/compat';
 declare const useEffectCleanupRegister: (deps?: React.DependencyList) => (fn: () => void) => void;
 export default useEffectCleanupRegister;
diff --git a/lib/hooks/useStyleRegister.d.ts b/lib/hooks/useStyleRegister.d.ts
index 9e4f94eb6074fca6cd6ccb106e679df91166ea8f..3fa11a6101db455ba50df324d89f717e378258ae 100644
--- a/lib/hooks/useStyleRegister.d.ts
+++ b/lib/hooks/useStyleRegister.d.ts
@@ -1,5 +1,5 @@
 import type * as CSS from 'csstype';
-import * as React from 'react';
+import * as React from 'preact/compat';
 import type { Theme, Transformer } from '..';
 import type Keyframes from '../Keyframes';
 import type { Linter } from '../linters';
diff --git a/package.json b/package.json
index 931d6560d1b690eb4e11e5d168ec0b2f01bdda2d..2ef967f15db7a11c9066d512844c04f898d89e7c 100644
--- a/package.json
+++ b/package.json
@@ -43,10 +43,10 @@
     "@babel/runtime": "^7.11.1",
     "@emotion/hash": "^0.8.0",
     "@emotion/unitless": "^0.7.5",
-    "classnames": "^2.3.1",
     "csstype": "^3.1.3",
     "rc-util": "^5.35.0",
-    "stylis": "^4.0.13"
+    "stylis": "^4.0.13",
+    "clsx": "^2.1.1"
   },
   "devDependencies": {
     "@ctrl/tinycolor": "^3.4.0",
@@ -73,14 +73,12 @@
     "np": "^7.0.0",
     "prettier": "^2.0.5",
     "pretty-quick": "^3.0.0",
-    "react": "^18.0.0",
-    "react-dom": "^18.0.0",
     "typescript": "^4.0.5",
-    "vitest": "^0.31.0"
+    "vitest": "^0.31.0",
+    "preact": "^10.22.1"
   },
   "peerDependencies": {
-    "react": ">=16.0.0",
-    "react-dom": ">=16.0.0"
+    "preact": "^10.22.1"
   },
   "husky": {
     "hooks": {
